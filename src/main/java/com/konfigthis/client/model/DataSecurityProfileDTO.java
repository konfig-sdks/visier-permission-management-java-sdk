/*
 * Visier Permission Management APIs
 * Visier APIs for managing permissions within an organization
 *
 * The version of the OpenAPI document: 22222222.99201.1200
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.InheritedAccessConfigDTO;
import com.konfigthis.client.model.MemberFilterConfigDTO;
import com.konfigthis.client.model.PropertySetConfigDTO;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * DataSecurityProfileDTO
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class DataSecurityProfileDTO {
  public static final String SERIALIZED_NAME_ANALYTIC_OBJECT_ID = "analyticObjectId";
  @SerializedName(SERIALIZED_NAME_ANALYTIC_OBJECT_ID)
  private String analyticObjectId;

  public static final String SERIALIZED_NAME_PROPERTY_SET_CONFIG = "propertySetConfig";
  @SerializedName(SERIALIZED_NAME_PROPERTY_SET_CONFIG)
  private PropertySetConfigDTO propertySetConfig;

  public static final String SERIALIZED_NAME_ALL_DATA_POINT_ACCESS = "allDataPointAccess";
  @SerializedName(SERIALIZED_NAME_ALL_DATA_POINT_ACCESS)
  private Boolean allDataPointAccess;

  public static final String SERIALIZED_NAME_MEMBER_FILTER_CONFIGS = "memberFilterConfigs";
  @SerializedName(SERIALIZED_NAME_MEMBER_FILTER_CONFIGS)
  private List<MemberFilterConfigDTO> memberFilterConfigs = null;

  public static final String SERIALIZED_NAME_INHERITED_ACCESS_CONFIGS = "inheritedAccessConfigs";
  @SerializedName(SERIALIZED_NAME_INHERITED_ACCESS_CONFIGS)
  private List<InheritedAccessConfigDTO> inheritedAccessConfigs = null;

  public DataSecurityProfileDTO() {
  }

  public DataSecurityProfileDTO analyticObjectId(String analyticObjectId) {
    
    
    
    
    this.analyticObjectId = analyticObjectId;
    return this;
  }

   /**
   * The analytic object ID associated with the data security profile.
   * @return analyticObjectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The analytic object ID associated with the data security profile.")

  public String getAnalyticObjectId() {
    return analyticObjectId;
  }


  public void setAnalyticObjectId(String analyticObjectId) {
    
    
    
    this.analyticObjectId = analyticObjectId;
  }


  public DataSecurityProfileDTO propertySetConfig(PropertySetConfigDTO propertySetConfig) {
    
    
    
    
    this.propertySetConfig = propertySetConfig;
    return this;
  }

   /**
   * The property set configuration that defines which properties and access level to allow for each filtered record.
   * @return propertySetConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The property set configuration that defines which properties and access level to allow for each filtered record.")

  public PropertySetConfigDTO getPropertySetConfig() {
    return propertySetConfig;
  }


  public void setPropertySetConfig(PropertySetConfigDTO propertySetConfig) {
    
    
    
    this.propertySetConfig = propertySetConfig;
  }


  public DataSecurityProfileDTO allDataPointAccess(Boolean allDataPointAccess) {
    
    
    
    
    this.allDataPointAccess = allDataPointAccess;
    return this;
  }

   /**
   * The flag for giving all access to data points when creating a population.
   * @return allDataPointAccess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The flag for giving all access to data points when creating a population.")

  public Boolean getAllDataPointAccess() {
    return allDataPointAccess;
  }


  public void setAllDataPointAccess(Boolean allDataPointAccess) {
    
    
    
    this.allDataPointAccess = allDataPointAccess;
  }


  public DataSecurityProfileDTO memberFilterConfigs(List<MemberFilterConfigDTO> memberFilterConfigs) {
    
    
    
    
    this.memberFilterConfigs = memberFilterConfigs;
    return this;
  }

  public DataSecurityProfileDTO addMemberFilterConfigsItem(MemberFilterConfigDTO memberFilterConfigsItem) {
    if (this.memberFilterConfigs == null) {
      this.memberFilterConfigs = new ArrayList<>();
    }
    this.memberFilterConfigs.add(memberFilterConfigsItem);
    return this;
  }

   /**
   * The member filter configurations that defines the population.
   * @return memberFilterConfigs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The member filter configurations that defines the population.")

  public List<MemberFilterConfigDTO> getMemberFilterConfigs() {
    return memberFilterConfigs;
  }


  public void setMemberFilterConfigs(List<MemberFilterConfigDTO> memberFilterConfigs) {
    
    
    
    this.memberFilterConfigs = memberFilterConfigs;
  }


  public DataSecurityProfileDTO inheritedAccessConfigs(List<InheritedAccessConfigDTO> inheritedAccessConfigs) {
    
    
    
    
    this.inheritedAccessConfigs = inheritedAccessConfigs;
    return this;
  }

  public DataSecurityProfileDTO addInheritedAccessConfigsItem(InheritedAccessConfigDTO inheritedAccessConfigsItem) {
    if (this.inheritedAccessConfigs == null) {
      this.inheritedAccessConfigs = new ArrayList<>();
    }
    this.inheritedAccessConfigs.add(inheritedAccessConfigsItem);
    return this;
  }

   /**
   * A list of objects representing the inherited access configurations associated with the data security profile.  By default all related objects of a top level analytic object will inherit access.  To remove access to a related analytic object, add it to the list of inherited access configurations with removeAccess: true.  To add custom filters to a related analytic object, add the analytic object to the list of inherited access configurations and then add the custom filters to its list of member filter configurations.
   * @return inheritedAccessConfigs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of objects representing the inherited access configurations associated with the data security profile.  By default all related objects of a top level analytic object will inherit access.  To remove access to a related analytic object, add it to the list of inherited access configurations with removeAccess: true.  To add custom filters to a related analytic object, add the analytic object to the list of inherited access configurations and then add the custom filters to its list of member filter configurations.")

  public List<InheritedAccessConfigDTO> getInheritedAccessConfigs() {
    return inheritedAccessConfigs;
  }


  public void setInheritedAccessConfigs(List<InheritedAccessConfigDTO> inheritedAccessConfigs) {
    
    
    
    this.inheritedAccessConfigs = inheritedAccessConfigs;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the DataSecurityProfileDTO instance itself
   */
  public DataSecurityProfileDTO putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DataSecurityProfileDTO dataSecurityProfileDTO = (DataSecurityProfileDTO) o;
    return Objects.equals(this.analyticObjectId, dataSecurityProfileDTO.analyticObjectId) &&
        Objects.equals(this.propertySetConfig, dataSecurityProfileDTO.propertySetConfig) &&
        Objects.equals(this.allDataPointAccess, dataSecurityProfileDTO.allDataPointAccess) &&
        Objects.equals(this.memberFilterConfigs, dataSecurityProfileDTO.memberFilterConfigs) &&
        Objects.equals(this.inheritedAccessConfigs, dataSecurityProfileDTO.inheritedAccessConfigs)&&
        Objects.equals(this.additionalProperties, dataSecurityProfileDTO.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(analyticObjectId, propertySetConfig, allDataPointAccess, memberFilterConfigs, inheritedAccessConfigs, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DataSecurityProfileDTO {\n");
    sb.append("    analyticObjectId: ").append(toIndentedString(analyticObjectId)).append("\n");
    sb.append("    propertySetConfig: ").append(toIndentedString(propertySetConfig)).append("\n");
    sb.append("    allDataPointAccess: ").append(toIndentedString(allDataPointAccess)).append("\n");
    sb.append("    memberFilterConfigs: ").append(toIndentedString(memberFilterConfigs)).append("\n");
    sb.append("    inheritedAccessConfigs: ").append(toIndentedString(inheritedAccessConfigs)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("analyticObjectId");
    openapiFields.add("propertySetConfig");
    openapiFields.add("allDataPointAccess");
    openapiFields.add("memberFilterConfigs");
    openapiFields.add("inheritedAccessConfigs");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to DataSecurityProfileDTO
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!DataSecurityProfileDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DataSecurityProfileDTO is not found in the empty JSON string", DataSecurityProfileDTO.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("analyticObjectId") != null && !jsonObj.get("analyticObjectId").isJsonNull()) && !jsonObj.get("analyticObjectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `analyticObjectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("analyticObjectId").toString()));
      }
      // validate the optional field `propertySetConfig`
      if (jsonObj.get("propertySetConfig") != null && !jsonObj.get("propertySetConfig").isJsonNull()) {
        PropertySetConfigDTO.validateJsonObject(jsonObj.getAsJsonObject("propertySetConfig"));
      }
      if (jsonObj.get("memberFilterConfigs") != null && !jsonObj.get("memberFilterConfigs").isJsonNull()) {
        JsonArray jsonArraymemberFilterConfigs = jsonObj.getAsJsonArray("memberFilterConfigs");
        if (jsonArraymemberFilterConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("memberFilterConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `memberFilterConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("memberFilterConfigs").toString()));
          }

          // validate the optional field `memberFilterConfigs` (array)
          for (int i = 0; i < jsonArraymemberFilterConfigs.size(); i++) {
            MemberFilterConfigDTO.validateJsonObject(jsonArraymemberFilterConfigs.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("inheritedAccessConfigs") != null && !jsonObj.get("inheritedAccessConfigs").isJsonNull()) {
        JsonArray jsonArrayinheritedAccessConfigs = jsonObj.getAsJsonArray("inheritedAccessConfigs");
        if (jsonArrayinheritedAccessConfigs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("inheritedAccessConfigs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `inheritedAccessConfigs` to be an array in the JSON string but got `%s`", jsonObj.get("inheritedAccessConfigs").toString()));
          }

          // validate the optional field `inheritedAccessConfigs` (array)
          for (int i = 0; i < jsonArrayinheritedAccessConfigs.size(); i++) {
            InheritedAccessConfigDTO.validateJsonObject(jsonArrayinheritedAccessConfigs.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DataSecurityProfileDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DataSecurityProfileDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DataSecurityProfileDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DataSecurityProfileDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<DataSecurityProfileDTO>() {
           @Override
           public void write(JsonWriter out, DataSecurityProfileDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public DataSecurityProfileDTO read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             DataSecurityProfileDTO instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of DataSecurityProfileDTO given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of DataSecurityProfileDTO
  * @throws IOException if the JSON string is invalid with respect to DataSecurityProfileDTO
  */
  public static DataSecurityProfileDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DataSecurityProfileDTO.class);
  }

 /**
  * Convert an instance of DataSecurityProfileDTO to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

